{"version":3,"sources":["assets/images/bees/bee-showing-stinger.png","assets/images/bees/bee-pointing-right.png","State/KeplrClient.js","Components/SetupSecret.jsx","assets/images/bees/bee-carrying.png","assets/images/bees/bee-sitting.png","Components/RevealSecret.jsx","assets/images/bees/bee-sleepy.png","Components/SecretNotFound.jsx","Components/Welcome.jsx","assets/images/bees/bee-angry.png","Components/UnknownUrl.jsx","App.js","reportWebVitals.js","index.js"],"names":["CHAIN_ID","initialState","client","address","KeplrClient","createContext","ClientProvider","children","useState","keplrLoaded","setKeplrLoaded","setClient","setAddress","useEffect","a","window","keplr","document","readyState","Promise","resolve","addEventListener","documentStateChange","event","target","removeEventListener","waitForKeplr","enable","offlineSigner","getOfflineSigner","enigmaUtils","getEnigmaUtils","getAccounts","accounts","cosmJS","SigningCosmWasmClient","getClient","Provider","value","SetupSecret","fn","useContext","inProgress","setInProgress","message","setMessage","copied","setCopied","tokenId","setTokenId","handleCreateToken","token_id","Random","getBytes","reduce","acc","b","toString","padStart","execute","CONTRACT_ADDRESS","public_metadata","description","catch","f","console","log","response","result","JSON","parse","String","fromCharCode","data","mint_nft","ready","className","src","beePointing","alt","text","location","origin","onCopy","e","icon","faClipboard","as","to","Button","variant","size","Form","FormGroup","controlId","FormLabel","FormControl","rows","onChange","disabled","onClick","faSpinner","spin","href","rel","beeShowingStinger","RevealSecret","useParams","history","useHistory","revealed","setRevealed","handleBurnToReveal","then","res","burn_nft","secret","err","error","replace","beeCarrying","beeSitting","SecretNotFound","beeSleepy","Welcome","UnknownUrl","beeAngry","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f6c59f1c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bee-showing-stinger.59123214.png\";","export default __webpack_public_path__ + \"static/media/bee-pointing-right.59e0329e.png\";","import React, {createContext, useState, useEffect} from 'react'\nimport {SigningCosmWasmClient} from \"secretjs\"\n\nconst CHAIN_ID = \"holodeck-2\"\nconst API_URL = \"https://bootstrap.secrettestnet.io/\";\n\nconst initialState = {client: null, address: null}\nexport const KeplrClient = createContext(initialState)\n\nexport const ClientProvider = ({children}) => {\n    const [keplrLoaded, setKeplrLoaded] = useState(false)\n    const [client, setClient] = useState()\n    const [address, setAddress] = useState()\n\n    useEffect(() => {\n        const waitForKeplr = async () => {\n            if (!!window.keplr) {\n                setKeplrLoaded(true)\n                return window.keplr\n            }\n\n            if (document.readyState === \"complete\") {\n                setKeplrLoaded(!!window.keplr)\n                return window.keplr\n            }\n\n            return new Promise((resolve) => {\n                const documentStateChange = (event) => {\n                    if (event.target?.readyState === \"complete\") {\n                        setKeplrLoaded(!!window.keplr)\n                        resolve(window.keplr)\n                        document.removeEventListener(\"readystatechange\", documentStateChange)\n                    }\n                };\n                document.addEventListener(\"readystatechange\", documentStateChange)\n            });\n        }\n\n        waitForKeplr()\n    })\n\n    useEffect(() => {\n        const getClient = async () => {\n            if (window?.keplr?.enable) {\n                // Enabling before using the Keplr is recommended.\n                // This method will ask the user whether or not to allow access if they haven't visited this website.\n                // Also, it will request user to unlock the wallet if the wallet is locked.\n                await window.keplr.enable(CHAIN_ID)\n\n                const offlineSigner = window.getOfflineSigner(CHAIN_ID)\n                const enigmaUtils = window.getEnigmaUtils(CHAIN_ID)\n\n                // You can get the address/public keys by `getAccounts` method.\n                // It can return the array of address/public key.\n                // But, currently, Keplr extension manages only one address/public key pair.\n                // XXX: This line is needed to set the sender address for SigningCosmosClient.\n                const accounts = await offlineSigner.getAccounts()\n                const address = accounts[0].address\n                setAddress(address)\n\n                // Initialize the gaia api with the offline signer that is injected by Keplr extension.\n                const cosmJS = new SigningCosmWasmClient(\n                    API_URL,\n                    address,\n                    offlineSigner,\n                    enigmaUtils\n                )\n                setClient(cosmJS)\n            } else {\n                setKeplrLoaded(false)\n            }\n        }\n        getClient()\n    }, [keplrLoaded])\n\n    return (\n        <KeplrClient.Provider value={{client, address}}>\n            {children}\n        </KeplrClient.Provider>\n    )\n}\n","import React, {useContext, useState} from \"react\";\nimport {Button, Form, FormControl, FormGroup, FormLabel} from \"react-bootstrap\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faClipboard, faSpinner} from \"@fortawesome/free-solid-svg-icons\";\nimport {Link} from \"react-router-dom\";\nimport {CopyToClipboard} from \"react-copy-to-clipboard/lib/Component\";\nimport beeShowingStinger from \"../assets/images/bees/bee-showing-stinger.png\"\nimport beePointing from \"../assets/images/bees/bee-pointing-right.png\"\nimport {KeplrClient} from \"../State/KeplrClient\";\nimport {CONTRACT_ADDRESS} from \"../App\";\nimport {Random} from \"@iov/crypto\";\n\nexport const SetupSecret = () => {\n    const {client} = useContext(KeplrClient)\n    const [inProgress, setInProgress] = useState(false)\n    const [message, setMessage] = useState('')\n    const [copied, setCopied] = useState(false)\n\n    const [tokenId, setTokenId] = useState('')\n\n    const handleCreateToken = async () => {\n        setInProgress(true)\n        const token_id = Random.getBytes(16).reduce(\n            (acc, b) => acc + b.toString(16).padStart(2, \"0\"),\n            ''\n        )\n        let response = await client.execute(CONTRACT_ADDRESS, {\n            \"mint_nft\": {\n                token_id,\n                public_metadata: {description: message}\n            }\n        }).catch(f => console.log(f));\n        let result = JSON.parse(String.fromCharCode(...response.data))\n        let tokenId = result?.mint_nft?.token_id\n        setTokenId(tokenId)\n        setMessage('')\n        setInProgress(false)\n    }\n\n    // NOTE: Make sure prompt to \"install holodeck-2\" pops up for users who haven't added it yet\n\n    const ready = client && !inProgress\n\n    const onChangeEvent = fn => ({target: {value}}) => fn(value)\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col\">\n                    <img src={beePointing} className=\"img-fluid\" alt=\"bee pointing\" />\n                </div>\n                <div className=\"col\">\n                    {ready && tokenId &&\n                    <>\n                        <h4>Your secret token is ready</h4>\n                        <div>\n                            <CopyToClipboard text={`${window.location.origin}/${tokenId}`}\n                                             onCopy={e => setCopied(true)}>\n                                <span>\n                                    {`${window.location.origin}/${tokenId}`}<FontAwesomeIcon className=\"ml-1 mr-1\"\n                                                                                             icon={faClipboard}/>\n                                </span>\n                            </CopyToClipboard>\n                            {copied && \"copied\"}<br/>\n                        </div>\n                        <Link as='Button' to={`/${tokenId}`}>\n                            <Button variant=\"outline-primary\" size=\"lg\" className=\"mt-4\">\n                                Share This Link to Reveal the Secret\n                            </Button>\n                        </Link>\n                    </>\n                    }\n                    {ready && !tokenId &&\n                    <>\n                        <Form>\n                            <FormGroup controlId='message'>\n                                <FormLabel>Message</FormLabel>\n                                <FormControl as=\"textarea\" rows={3} value={message}\n                                             onChange={onChangeEvent(setMessage)}/>\n                            </FormGroup>\n                            <FormGroup controlId='createTokenButton' className=\"text-center\">\n                                <Button size=\"lg\" className='create-token-button' variant=\"outline-primary\" disabled={!ready || !message}\n                                        onClick={handleCreateToken}>\n                                    {inProgress ?\n                                        <FontAwesomeIcon icon={faSpinner} spin/> : \"Create SHHH! token\"}\n                                </Button>\n                            </FormGroup>\n                        </Form>\n                    </>\n                    }\n                    {!ready &&\n                        <div>\n                            <h4 className=\"mt-5\">Connecting to Secret Network...</h4>\n                            <h6 className=\"mt-5\">\n                                (\n                                <a href=\"https://chrome.google.com/webstore/detail/keplr/dmkamcknogkgcdfhhbddcghachkejeap?hl=en\" target=\"_blank\" rel=\"noreferrer\">\n                                    Keplr wallet\n                                </a> must be installed and the holodeck-2 testnet added)\n                            </h6>\n                        </div>\n                    }\n                </div>\n                <div className=\"col\">\n                    <img src={beeShowingStinger} className=\"img-fluid\" alt=\"bee showing stinger\" />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default SetupSecret\n","export default __webpack_public_path__ + \"static/media/bee-carrying.dedfdf2e.png\";","export default __webpack_public_path__ + \"static/media/bee-sitting.9fa77ac0.png\";","import React, {useContext, useState} from \"react\";\nimport {Button, Form, FormControl, FormGroup, FormLabel} from \"react-bootstrap\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faSpinner} from \"@fortawesome/free-solid-svg-icons\";\nimport beeCarrying from \"../assets/images/bees/bee-carrying.png\"\nimport beeSitting from \"../assets/images/bees/bee-sitting.png\"\nimport {Link, useParams, useHistory} from 'react-router-dom'\nimport {KeplrClient} from \"../State/KeplrClient\";\nimport {CONTRACT_ADDRESS} from \"../App\";\n\nexport const RevealSecret = () => {\n    const {tokenId} = useParams()\n\n    const {client} = useContext(KeplrClient)\n\n    const history = useHistory()\n    const [inProgress, setInProgress] = useState(false)\n    const [revealed, setRevealed] = useState('')\n\n    const handleBurnToReveal = async () => {\n        setInProgress(true)\n\n        client.execute(CONTRACT_ADDRESS, {\n            \"burn_nft\": {\n                token_id: tokenId\n            }\n        }).then(res => {\n            let result = JSON.parse(String.fromCharCode(...res.data))\n            setRevealed(result?.burn_nft?.secret?.description)\n            setInProgress(false)\n        }).catch(err => {\n            console.error(err)\n            history.replace('/not-found')\n        });\n    }\n\n    const ready = client && !inProgress\n\n    return (\n        <div className=\"container-fluid\">\n            {tokenId && !revealed &&\n            <>\n                <div className=\"row\">\n                    <div className=\"col-2\">\n                    </div>\n                    <div className=\"col-8\">\n                        <Form>\n                            <h4>Burn token to reveal secret message.</h4>\n                            <FormGroup controlId='burnToRevealButton' className=\"text-center\">\n                                <Button className='burn-to-reveal-button mt-4' variant=\"outline-primary\" size=\"lg\" disabled={!ready} onClick={handleBurnToReveal}>\n                                    {inProgress ? <FontAwesomeIcon icon={faSpinner} spin/> : \"Burn to Reveal\"}\n                                </Button>\n                            </FormGroup>\n                        </Form>\n                        <img src={beeCarrying} className=\"img-fluid mt-5\" alt=\"bee carrying bucket of honey\" />\n                    </div>\n                    <div className=\"col-2\">\n                    </div>\n                </div>\n            </>\n            }\n            {revealed &&\n            <>\n                <div className=\"row\">\n                    <div className=\"col-2\">\n                    </div>\n                    <div className=\"col-8\">\n                        <Form>\n                            <FormGroup controlId='revealedMessage'>\n                                <FormLabel>Revealed Message</FormLabel>\n                                <FormControl as=\"textarea\" rows={3} value={revealed} disabled={true}/>\n                            </FormGroup>\n                            <Link to=\"/new\">\n                                <Button variant=\"outline-primary\">\n                                    Send another secret\n                                </Button>\n                            </Link>\n                        </Form>\n                        <img src={beeSitting} className=\"img-fluid mt-5\" alt=\"bee sitting with a bucket of honey\" />\n                    </div>\n                    <div className=\"col-2\">\n                    </div>\n                </div>\n            </>\n            }\n        </div>\n    );\n\n}\n\nexport default RevealSecret\n","export default __webpack_public_path__ + \"static/media/bee-sleepy.93bbc793.png\";","import {Link} from \"react-router-dom\";\nimport React from \"react\";\nimport {Button} from \"react-bootstrap\";\nimport beeSleepy from \"../assets/images/bees/bee-sleepy.png\"\n\nexport const SecretNotFound = () =>\n    <div className=\"container-fluid\">\n        <div className=\"row\">\n            <div className=\"col-5 mt-5\">\n                <h4>404: Secret Not Found</h4>\n                <Link to=\"/\">\n                    <Button className=\"mt-4 mb-5\" variant=\"outline-primary\" size=\"lg\">\n                        Create New Secret\n                    </Button>\n                </Link>\n            </div>\n            <div className=\"col-7\">\n                <img src={beeSleepy} alt=\"confused bee\" className=\"img-fluid\" />\n            </div>\n        </div>\n    </div>\n\nexport default SecretNotFound\n","import beeShowingStinger from \"../assets/images/bees/bee-showing-stinger.png\"\nimport {Button} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\n\nexport const Welcome = () => {\n    return (\n        <div className=\"container-fluid welcome\">\n            <div className=\"row mb-5\">\n                <div className=\"col\">\n                    <Link to=\"/new\">\n                        <Button size=\"lg\" variant=\"outline-primary\">\n                            Create Secret Message\n                        </Button>\n                    </Link>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-sm-3 mt-4\">\n                    <h1>Trustless</h1>\n                    <h1>Temporary</h1>\n                </div>\n                <div className=\"col-sm-6\">\n                    <img src={beeShowingStinger} className=\"img-fluid\" alt=\"bee showing stinger\" />\n                </div>\n                <div className=\"col-sm-3 mt-4\">\n                    <h1>Secret</h1>\n                    <h1>Sharing</h1>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Welcome\n","export default __webpack_public_path__ + \"static/media/bee-angry.0f248343.png\";","import beeAngry from \"../assets/images/bees/bee-angry.png\"\nimport {Link} from \"react-router-dom\";\nimport {Button} from \"react-bootstrap\";\n\nexport const UnknownUrl = () =>\n    <>\n        <div className=\"row mb-5\">\n            <div className=\"col-sm\"></div>\n            <div className=\"col-sm\">\n                <img src={beeAngry} className=\"img-fluid\" alt=\"angry bee\" />\n            </div>\n            <div className=\"col-sm\"></div>\n        </div>\n        <div className='row'>\n            <div className='col'>\n                <h3>It seems that you've lost your way</h3>\n            </div>\n        </div>\n        <div className=\"row\">\n            <div className=\"col\">\n                <Link to=\"/\">\n                    <Button size=\"lg\" variant=\"outline-primary\">\n                        Go back to the hive\n                    </Button>\n                </Link>\n            </div>\n        </div>\n    </>\n\nexport default UnknownUrl\n","import './App.scss';\nimport React from \"react\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n} from \"react-router-dom\";\nimport SetupSecret from \"./Components/SetupSecret\";\nimport RevealSecret from \"./Components/RevealSecret\";\nimport SecretNotFound from \"./Components/SecretNotFound\";\nimport Welcome from \"./Components/Welcome\"\nimport {ClientProvider} from \"./State/KeplrClient\";\nimport UnknownUrl from \"./Components/UnknownUrl\";\n\nexport const CONTRACT_ADDRESS = 'secret19vc03hfsuqfsmt73c4fypg5au07lfngpcw2ytc'\n\nfunction App() {\n    return (\n        <ClientProvider>\n            <Router>\n                <div className=\"App\">\n                    <header className=\"App-header\">\n                        <h1>Shhh.buzz</h1>\n                        Like Snapchat, except for secrets\n                    </header>\n                    <Switch>\n                        <Route path='/' exact>\n                            <Welcome/>\n                        </Route>\n                        <Route path='/new' exact>\n                            <SetupSecret/>\n                        </Route>\n                        <Route path='/not-found' exact>\n                            <SecretNotFound/>\n                        </Route>\n                        <Route path='/:tokenId' exact>\n                            <RevealSecret/>\n                        </Route>\n                        <Route path='*'>\n                            <UnknownUrl/>\n                        </Route>\n                    </Switch>\n                </div>\n            </Router>\n        </ClientProvider>\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}